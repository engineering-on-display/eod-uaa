{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart/chart-line/chart-line.component.html","webpack:///./src/app/chart/chart-line/chart-line.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/sensor.model.js","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/services/building.service.ts","webpack:///./src/app/services/reshape-chart.service.js","webpack:///./src/app/services/reshape-chart.service.ts","webpack:///./src/app/services/sensor-data.service.js","webpack:///./src/app/services/sensor.service.ts","webpack:///./src/app/services/slide.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/y-axis.service.js","webpack:///./src/app/slide/slide-details/slide-details.component.html","webpack:///./src/app/slide/slide-details/slide-details.component.scss","webpack:///./src/app/slide/slide-details/slide-details.component.ts","webpack:///./src/app/slide/slide-list/slide-list.component.html","webpack:///./src/app/slide/slide-list/slide-list.component.scss","webpack:///./src/app/slide/slide-list/slide-list.component.ts","webpack:///./src/app/slideshow/slideshow.component.html","webpack:///./src/app/slideshow/slideshow.component.scss","webpack:///./src/app/slideshow/slideshow.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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IAAI,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACpD,CAAC;IA5CU,mBAAmB;QAP/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QACF;;;WAGG;;;OACU,mBAAmB,CA6C/B;IAAD,0BAAC;CAAA;AA7C+B;AA+ChC;;GAEG;AACH,IAAM,cAAc,GAAG;IACrB,EAAE,EAAE,CAAC;IACL,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,eAAe;IACtB,WAAW,EAAE,cAAc;IAC3B,eAAe,EAAE,cAAc;IAC/B,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,CAAC;CACX,CAAC;AAEF;;GAEG;AACH,IAAM,cAAc,GACpB;IACE,EAAE,EAAE,CAAC;IACL,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,MAAM;IAEhB,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,qBAAqB;KACnC;IAED,SAAS,EAAE;QACT,eAAe,EAAE,KAAK;KACvB;CACF,CAAC;;;;;;;;;;;;;;;ACvFF;AAAA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0BAA0B,EAAE;AACrF;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SlideListComponent } from './slide/slide-list/slide-list.component';\r\nimport { SlideDetailsComponent } from './slide/slide-details/slide-details.component';\r\n\r\n\r\n\r\n/**\r\n * list of routes for whole website.\r\n * Todo: break up routes into feature modules.\r\n */\r\nconst routes: Routes = [\r\n  {path:'home', component: HomeComponent},\r\n  {path:'slide-list', component: SlideListComponent},\r\n  {path:'slide', component:SlideDetailsComponent},\r\n  {path:'dashboard', component: DashboardComponent},\r\n  {path:'', redirectTo: 'home', pathMatch: 'full'},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n<!-- Basic structure of the page -->\\r\\n<app-nav *ngIf='showNavbar'></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Navigation } from 'selenium-webdriver';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  showNavbar: boolean;\n  showSlideShow: boolean;\n  showSlideShowPaths = ['/dashboard'];\n  hideNavbarPaths = ['/dashboard'];\n\n  constructor(private _router: Router){\n    //check the route whenever the user navagates to see if hide and show componets on main page\n    _router.events.subscribe(event => {\n      if(event instanceof NavigationEnd){\n        this.checkRouteForNavbarStatus();\n      }\n    });\n  }\n\n  //looks at the route to see if the nav bar should be shown\n  checkRouteForNavbarStatus(){\n    //remove the query string\n    let url = this._router.url.split(\"?\")[0];\n\n    //check if the url is in the hidden list\n    this.showNavbar = !this.hideNavbarPaths.includes(url);\n    this.showSlideShow = this.showSlideShowPaths.includes(url);\n    //this.showSlideShow = false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SlideshowComponent } from './slideshow/slideshow.component';\r\nimport { SlideService } from './services/slide.service';\r\nimport { BuildingService } from './services/building.service';\r\nimport { SensorService } from './services/sensor.service';\r\nimport { UserService } from './services/user.service';\r\nimport { ReshapeChartService } from './services/reshape-chart.service';\r\nimport { SlideListComponent } from './slide/slide-list/slide-list.component';\r\nimport { SlideDetailsComponent } from './slide/slide-details/slide-details.component';\nimport { ChartLineComponent } from './chart/chart-line/chart-line.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    DashboardComponent,\r\n    HomeComponent,\r\n    SlideshowComponent,\r\n    SlideListComponent,\r\n    SlideDetailsComponent,\r\n    ChartLineComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers:[\r\n    SlideService,\r\n    BuildingService,\r\n    SensorService,\r\n    UserService,\r\n    ReshapeChartService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h4>chart</h4>\\n<div>\\n  <canvas id='canvas'>{{chart}}</canvas>\\n</div>\\n\"","import { Component, OnInit, Input, ModuleWithComponentFactories } from '@angular/core';\nimport { Chart } from '../../../../node_modules/chart.js';\nimport { SensorDataService } from '../../services/sensor-data.service.js';\nimport { SensorService } from '../../services/sensor.service.js';\nimport { YAxisService } from '../../services/y-axis.service.js';\nimport { ISensorModel } from '../../models/sensor.model.js';\nimport { ReshapeChartService } from '../../services/reshape-chart.service.js';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-chart-line',\n  templateUrl: './chart-line.component.html',\n})\nexport class ChartLineComponent implements OnInit {\n  chart;\n  config;\n  @Input() sensor:ISensorModel;\n\n  constructor(private _sensorDataService:SensorDataService, private _yAxisService:YAxisService, private _reshapeService:ReshapeChartService) {}\n\n  ngOnInit() {\n    this.loadDefaultConfig();\n    const end = this._sensorDataService.floorTimeFifteenMinutes(Date.now());\n    const start = this._sensorDataService.calcStartTimePerNumberOfFifteenMinuteIntervals(end, 672);\n\n    //retreive and a reshaped YAxis for the chart\n    const yAxis = this._yAxisService.getYAxis(this.sensor.yAxisID);\n    this.config.options.scales.yAxes.push(this._reshapeService.reshapeYAxis(yAxis));\n\n    //reshape and add sensor to config\n    this.config.data.datasets.push(this._reshapeService.reshapeSensor(this.sensor));\n\n    //add the lables\n    this.config.data.labels = this._sensorDataService.getSensorTime(this.sensor.id, start, end);\n\n    this.config.data.datasets[0].data = this._sensorDataService.getSensorData(this.sensor.id, start, end);\n\n    this.config.options.scales.xAxes[0].ticks.scaleStartValue = this.calcClosest12Hr(start);\n    //this.config.data.labels = this._sensorDataService.getSensorTime(this.sensor);\n    this.chart = new Chart('canvas', this.config);\n  }\n\n  calcClosest12Hr(time:number){\n    let dt = new Date(time);\n    if(dt.getHours() < 12){\n      dt.setHours(12);\n    }\n    else{\n      dt.setHours(0); //set hours to midnight\n      dt.setHours(24); //advance one day\n    }\n    dt.setMinutes(0);\n    return dt.getTime();\n  }\n\n  loadDefaultConfig() {\n    this.config = {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [],\n      },\n      options: {\n        lineHeight: 1,\n        responsive: true,\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        stacked: false,\n        title: {\n          display: true,\n          text: 'Test'\n        },\n        scales: {\n          yAxes: [],\n          xAxes: [{\n            ticks: {\n              maxTicksLimit: 10,\n              autoSkip : true,\n              callback: function(value, index, values) {\n                  const dt = new Date(value);\n                  return moment(value).format('ddd h:mm a');\n              }\n            }\n          }]\n        }\n      }\n    };\n  }\n}\n\n// type: 'time',\n//             display: true,\n//             distribution: 'series',\n//             scaleLabel: {\n//               display: true,\n//               labelString: 'Date & Time',\n//               fontStyle: 'bold'\n//             },\n","module.exports = \"\\r\\n<div id='dashboar-main'>\\r\\n\\r\\n\\r\\n  <!-- panel-slide-0 -->\\r\\n  <div id='panel-0' class='container-fluid prev'>\\r\\n    <h1>panel 0</h1>\\r\\n  </div>\\r\\n\\r\\n   <!-- panel-chart -->\\r\\n   <div id='panel-1' class='container'>\\r\\n\\r\\n    <div class='d-flex flex-row justify-content-around'>\\r\\n      <div><h4>{{building.name}}</h4></div>\\r\\n      <div><img class='sm-img' [src]='building.imgUrl'/></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n\\r\\n    <app-chart-line [sensor]='sensors[0]'></app-chart-line>\\r\\n  </div>\\r\\n\\r\\n  <!-- panel-slide-1 -->\\r\\n  <div id='panel-2' class='container-fluid next'>\\r\\n    <h1>panel 1</h1>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n  <!-- slideshow footer -->\\r\\n<div id='ss-select'>\\r\\n  <app-slideshow></app-slideshow>\\r\\n</div>\\r\\n\"","module.exports = \".prev {\\n  position: fixed;\\n  left: -100%; }\\n\\n.next {\\n  position: fixed;\\n  left: +100%; }\\n\\n.main {\\n  position: relative;\\n  height: calc(100% + 200px); }\\n\\n.ss-select {\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 140px;\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IBuildingModel } from '../models/building.model';\r\nimport { BuildingService } from '../services/building.service';\r\nimport { SensorService } from '../services/sensor.service';\r\nimport { ISensorModel } from '../models/sensor.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  building:IBuildingModel;\r\n  sensors:ISensorModel[] = [];\r\n\r\n  constructor(private _buildingService:BuildingService,\r\n    private _sensorService:SensorService,\r\n    private _route:ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    const building_id = +this._route.snapshot.queryParams[\"id\"];\r\n    this.building = this._buildingService.getBuilding(building_id);\r\n    this.sensors.push(this._sensorService.getSensor(2));\r\n  }\r\n}\r\n\r\n\r\n\r\n","module.exports = \"<p>\\n  Todo: create a home page.\\n</p>\\n\\n<ul>\\n  <li><a [routerLink]='[\\\"/dashboard\\\"]' [queryParams]=\\\"{id: 1}\\\">EIB building</a></li>\\n  <li><a [routerLink]='[\\\"/slide-list\\\"]'>Slide List</a></li>\\n\\n</ul>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * Model for the sensor configuration and info.\n * This does not handel anything for the sensor-data\n */\nvar ISensorModel = /** @class */ (function () {\n    function ISensorModel() {\n    }\n    return ISensorModel;\n}());\nexport { ISensorModel };\nvar IYAxisModel = /** @class */ (function () {\n    function IYAxisModel() {\n    }\n    return IYAxisModel;\n}());\nexport { IYAxisModel };\n//# sourceMappingURL=sensor.model.js.map","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Engineering on Display</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Login</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IBuildingModel } from '../models/building.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingService {\n  buildings:IBuildingModel[]; //Used by mock API to store buildings.\n\n  constructor() {\n    this.mockBuildings();\n  }\n\n  /**\n   * Get data on a particular building.\n   * @param id of the building being requested.\n   */\n  getBuilding(id:number):IBuildingModel{\n    return this.buildings.find(b => b.id === id);\n  }\n\n  /**\n   * Get a list of all buildings.\n   */\n  getBuildings():IBuildingModel[]{\n    return this.buildings;\n  }\n\n  /**\n   * Posts building to the API.\n   * @param building model to be posted\n   * @returns id of the posted building.\n   */\n  postBuilding(building:IBuildingModel):number{\n    return 0;\n  }\n\n  /**\n   * Private method for mocking the API until it is complete.\n   */\n  private mockBuildings(){\n    this.buildings = [{\n      id: 1,\n      name: \"Engineering and Industry Building\",\n      abbrevation: \"EIB\",\n      imgUrl:'../assets/img/EIB-small.jpg'\n    },{\n      id: 2,\n      name: 'Eugene Short Hall',\n      abbrevation: \"ESH\",\n      imgUrl: \"../asset/img/ShortBuilding.jpg\"\n    }];\n  }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nvar ReshapeChartService = /** @class */ (function () {\n    function ReshapeChartService() {\n    }\n    /**\n     * Reshapes a ISensor from the API to a chart.js dataset.\n     * @param sensor to be reshaped\n     */\n    ReshapeChartService.prototype.reshapeSensor = function (sensor) {\n        var newDataset = DEFAULT_SENSOR;\n        newDataset.id = sensor.id;\n        newDataset.label = sensor.label;\n        newDataset.backgroundColor = sensor.backgroundColor;\n        newDataset.borderColor = sensor.borderColor;\n        newDataset.yAxisID = sensor.yAxisID;\n        return newDataset;\n    };\n    /**\n     * Reshapes an array of ISensors using the reshapeSensor method.\n     * @param sensors is an array of sensors.\n     */\n    ReshapeChartService.prototype.reshapeSensors = function (sensors) {\n        var _this = this;\n        return sensors.map(function (sensor) { return _this.reshapeSensor(sensor); });\n    };\n    /**\n     * Reshape the IYAxisModel from the API to a chart.js yAxis object.\n     * @param yAxis to be reshaped.\n     */\n    ReshapeChartService.prototype.reshapeYAxis = function (yAxis) {\n        var newYAxis = DEFAULT_Y_AXIS;\n        newYAxis.id = yAxis.id;\n        newYAxis.position = yAxis.position;\n        newYAxis.scaleLabel.labelString = yAxis.labelString;\n        return newYAxis;\n    };\n    /**\n     * Reshape an array of IYAxis using the reshapeYAxis method.\n     * @param yAxes is an array of yAxis.\n     */\n    ReshapeChartService.prototype.reshapeYAxes = function (yAxes) {\n        var _this = this;\n        return yAxes.map(function (axis) { return _this.reshapeYAxis(axis); });\n    };\n    ReshapeChartService = __decorate([\n        Injectable({\n            providedIn: 'root'\n        })\n        /**\n         * Reshapes API data to an object consumed by Chart.js.\n         * This service just removes some of the code from the dashboard.\n         */\n        ,\n        __metadata(\"design:paramtypes\", [])\n    ], ReshapeChartService);\n    return ReshapeChartService;\n}());\nexport { ReshapeChartService };\n/**\n * Holds the default shape of the sensor to dataset reshape.\n */\nvar DEFAULT_SENSOR = {\n    id: 1,\n    data: [],\n    label: 'Default Label',\n    borderColor: 'rgb(0, 0, 0)',\n    backgroundColor: 'rgb(0, 0, 0)',\n    fill: false,\n    yAxisID: 0,\n};\n/**\n * Holds the yaxis reshape.\n */\nvar DEFAULT_Y_AXIS = {\n    id: 0,\n    display: true,\n    position: 'left',\n    scaleLabel: {\n        display: true,\n        labelString: 'Default YAxis Lable'\n    },\n    gridLines: {\n        drawOnChartArea: false,\n    }\n};\n//# sourceMappingURL=reshape-chart.service.js.map","import { Injectable } from '@angular/core';\nimport { IYAxisModel, ISensorModel } from '../models/sensor.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Reshapes API data to an object consumed by Chart.js.\n * This service just removes some of the code from the dashboard.\n */\nexport class ReshapeChartService {\n\n  constructor() { }\n\n  /**\n   * Reshapes a ISensor from the API to a chart.js dataset.\n   * @param sensor to be reshaped\n   */\n  reshapeSensor(sensor: ISensorModel) {\n    let newDataset = DEFAULT_SENSOR;\n    newDataset.id = sensor.id;\n    newDataset.label = sensor.label;\n    newDataset.backgroundColor = sensor.backgroundColor;\n    newDataset.borderColor = sensor.borderColor;\n    newDataset.yAxisID = sensor.yAxisID;\n    return newDataset;\n  }\n\n  /**\n   * Reshapes an array of ISensors using the reshapeSensor method.\n   * @param sensors is an array of sensors.\n   */\n  reshapeSensors(sensors: ISensorModel[]) {\n    return sensors.map(sensor => this.reshapeSensor(sensor));\n  }\n\n  /**\n   * Reshape the IYAxisModel from the API to a chart.js yAxis object.\n   * @param yAxis to be reshaped.\n   */\n  reshapeYAxis(yAxis: IYAxisModel) {\n    let newYAxis = DEFAULT_Y_AXIS;\n    newYAxis.id = yAxis.id;\n    newYAxis.position = yAxis.position;\n    newYAxis.scaleLabel.labelString = yAxis.labelString;\n    return newYAxis;\n  }\n\n  /**\n   * Reshape an array of IYAxis using the reshapeYAxis method.\n   * @param yAxes is an array of yAxis.\n   */\n  reshapeYAxes(yAxes: IYAxisModel[]) {\n    return yAxes.map(axis => this.reshapeYAxis(axis));\n  }\n}\n\n/**\n * Holds the default shape of the sensor to dataset reshape.\n */\nconst DEFAULT_SENSOR = {\n  id: 1,\n  data: [],\n  label: 'Default Label',\n  borderColor: 'rgb(0, 0, 0)',\n  backgroundColor: 'rgb(0, 0, 0)',\n  fill: false,\n  yAxisID: 0,\n};\n\n/**\n * Holds the yaxis reshape.\n */\nconst DEFAULT_Y_AXIS =\n{\n  id: 0,\n  display: true,\n  position: 'left',\n\n  scaleLabel: {\n    display: true,\n    labelString: 'Default YAxis Lable'\n  },\n\n  gridLines: {\n    drawOnChartArea: false,\n  }\n};\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nvar SensorDataService = /** @class */ (function () {\n    function SensorDataService() {\n    }\n    /**\n     * Gets the array of sensor values for the given time frame.\n     * @param sensorId of the sensor to return times.\n     * @param start is the earliest time in milliseconds.\n     * @param end is the lastest time in milliseconds.\n     * @returns array of time in milliseconds.\n     */\n    SensorDataService.prototype.getSensorData = function (sensorId, start, end) {\n        //floor the times to the nearest 15 minutes\n        start = this.floorTimeFifteenMinutes(start);\n        end = this.floorTimeFifteenMinutes(end);\n        var config = mockSensorConfig.find(function (s) { return s.id === sensorId; });\n        var count = this.getNumberIntervals(start, end);\n        var numberArray = [];\n        var base = config.base;\n        for (var i = 0; i <= count; i++) {\n            base += Math.floor(Math.random() * (config.maxGrow - config.minGrow)) + config.minGrow;\n            numberArray.push(base);\n        }\n        return numberArray;\n    };\n    /**\n     * Gets the array of sensor times in milliseconds.\n     * @param sensorId of the sensor to return times.\n     * @param start is the earliest time in milliseconds.\n     * @param end is the lastest time in milliseconds.\n     * @returns array of time in milliseconds.\n     */\n    SensorDataService.prototype.getSensorTime = function (sensorId, start, end) {\n        var MS_PER_FIFTEEN_MINUTES = 15 * 60 * 1000;\n        var count = this.getNumberIntervals(start, end);\n        var timeArray = [];\n        var i;\n        //loop for the number of intervals given\n        for (i = 0; i <= count; i++) {\n            timeArray.push(start + (i * MS_PER_FIFTEEN_MINUTES));\n        }\n        return timeArray;\n    };\n    /**\n     * Return the last Date which is less than or equal to the Date.  H:00, H:15, H:30, H:45\n     * @param time is the time in milliseconds which will have the time floored to the last 15 min.\n     */\n    SensorDataService.prototype.floorTimeFifteenMinutes = function (time) {\n        var dt = new Date(time);\n        var minutes = Math.floor(dt.getMinutes() / 15) * 15;\n        dt.setMinutes(minutes);\n        dt.setSeconds(0);\n        dt.setMilliseconds(0);\n        return dt.getTime();\n    };\n    /**\n     * Calculate a start time given a time parameter and number of intervals.\n     * Assumes to always be given the ending time to calculate the start.\n     * @param time to end the time intevals at.\n     * @param intervals. number of fifteen minute intervals.\n     * @returns the eariler time before intervals  (return < time)\n     */\n    SensorDataService.prototype.calcStartTimePerNumberOfFifteenMinuteIntervals = function (time, intervals) {\n        var MS_PER_FIFTEEN_MINUTES = 15 * 60 * 1000;\n        return time - intervals * MS_PER_FIFTEEN_MINUTES;\n    };\n    /**\n     * Get the number of time intervals in a given time frame from start to end.\n     * @param interval time in minutes.\n     * @param start date of the time intervals. Earliest date.\n     * @param end date of the time intervals.  Latest date.\n     */\n    SensorDataService.prototype.getNumberIntervals = function (start, end) {\n        var minutes = (end - start) / 1000 / 60;\n        return Math.ceil(minutes / 15);\n    };\n    SensorDataService = __decorate([\n        Injectable({\n            providedIn: 'root'\n        }),\n        __metadata(\"design:paramtypes\", [])\n    ], SensorDataService);\n    return SensorDataService;\n}());\nexport { SensorDataService };\nvar mockSensorConfig = [{\n        id: 1,\n        minGrow: 30,\n        maxGrow: 50,\n        base: 2000\n    }, {\n        id: 2,\n        minGrow: -5,\n        maxGrow: 5,\n        base: 100\n    }, {\n        id: 3,\n        minGrow: 85,\n        maxGrow: 100,\n        base: 3050\n    }, {\n        id: 4,\n        minGrow: -5,\n        maxGrow: 10,\n        base: 60\n    }, {\n        id: 5,\n        minGrow: 30,\n        maxGrow: 50,\n        base: 2000\n    }, {\n        id: 6,\n        minGrow: -5,\n        maxGrow: 5,\n        base: 100\n    }\n];\n//# sourceMappingURL=sensor-data.service.js.map","import { Injectable } from '@angular/core';\nimport { ISensorModel, IYAxisModel } from '../models/sensor.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * CRUD service for handeling sensor config data.  Note: this does not handel the sensor-data.\n */\nexport class SensorService {\n  sensors: ISensorModel[];\n  constructor() {\n    this.loadMockSensors();\n  }\n\n  /**\n   * Get an arry of all sensors availible.\n   */\n  getSensors():ISensorModel[]{\n   //mock api\n   return this.sensors;\n  }\n\n  /**\n   * get an array of sensors for a building\n   * @param buildingId for the building which the array of sensors will be from.\n   */\n  getSensorsForBuilding(buildingId:number):ISensorModel[]{\n    //mock api\n    return this.sensors.filter(sensor => sensor.buildingId === buildingId);\n  }\n  /**\n   * Get the model for a particular sensor.\n   * @param id for the sensor to be returned.\n   */\n  getSensor(id:number):ISensorModel{\n    //mock api\n    return this.sensors.find(sensor => sensor.id === id);\n  }\n\n  /**\n   * Post a sensor to the api.\n   * @param sensor is the ISensorModel for the new sensor.\n   */\n  postSensor(sensor:ISensorModel):number{\n    sensor.id  = 1 + Math.max(...this.sensors.map(s => s.id));\n    this.sensors.push(sensor);\n    return sensor.id;\n  }\n  /**\n   * Update an existing sensor to the api. Currently it is a replace everything method.\n   * @param sensor is the ISensorModel for the new sensor.\n   */\n  updateSensor(sensor:ISensorModel):number{\n    const index = this.sensors.findIndex(s => s.id === sensor.id);\n    this.sensors[index] = sensor;\n    return sensor.id;\n  }\n\n  /**\n   * Delete a sensor with given id.\n   * @param id of the senor to delete\n   */\n  deleteSensor(id:number){\n    const index = this.sensors.findIndex(s => s.id === id);\n    this.sensors.splice(index, 1);\n  }\n\n  /**\n   * Private method to load a Mock API with data.\n   */\n  private loadMockSensors() {\n    this.sensors = [{\n      id: 1,\n      buildingId: 1,\n      label: 'Electrical Usage kWh',\n      borderColor: 'rgb(255, 205, 86)',\n      backgroundColor: 'rgb(255, 205, 86)',\n      yAxisID: 1,\n      iconUrl: '../assets/img/Electrical.png'\n    }, {\n      id: 2,\n      buildingId: 1,\n      label: 'Electrical Demand kW',\n      borderColor: 'rgb(255,204,153)',\n      backgroundColor: 'rgb(255,204,153)',\n      yAxisID: 2,\n      iconUrl: '../assets/img/Electrical.png'\n    }, {\n      id: 3,\n      buildingId: 1,\n      label: 'Natural Gas Usage kBTU',\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgb(255, 99, 132)',\n      yAxisID: 3,\n      iconUrl: '../assets/img/NaturalGas.png'\n    }, {\n      id: 4,\n      buildingId: 1,\n      label: 'Outside Temperature',\n      borderColor: 'rgb(201, 203, 207)',\n      backgroundColor: 'rgb(201, 203, 207)',\n      yAxisID: 5,\n      iconUrl: '../assets/img/OutsideTemperature.png'\n    }, {\n      id: 5,\n      buildingId: 2,\n      label: 'Electrical Demand kW',\n      borderColor: 'rgb(255, 205, 86)',\n      backgroundColor: 'rgb(255, 205, 86)',\n      yAxisID: 2,\n      iconUrl: '../assets/img/Electrical.png'\n    }, {\n      id: 6,\n      buildingId: 2,\n      label: 'Electrical Usage kWh',\n      borderColor: 'rgb(255, 205, 86)',\n      backgroundColor: 'rgb(255, 205, 86)',\n      yAxisID: 1,\n      iconUrl: '../assets/img/Electrical.png'\n    }];\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { ISlide } from '../models/slide.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlideService {\n  slides:ISlide[];\n  constructor() {\n    this.loadMockslides();\n   }\n\n  /**\n   * Get all the slides from the API.  Including the Root.\n   * @returns an array of slides.\n   */\n  getSlides():ISlide[]{\n    return this.slides;\n  }\n\n  /**\n   * Get a single slide by id.\n   * @param id of the requested slide.\n   * @returns a single instance of Islide.\n   */\n  getSlide(id:number):ISlide{\n    let slide = this.slides.find(s => s.id === id);\n    return slide;\n  }\n  /**\n   * Post a slide to the API.\n   * @param slide to be posted to API.\n   * @returns the index of the slide.\n   */\n  postSlide(slide:ISlide):number{\n    slide.id = Math.max(...this.slides.map(s => s.id));\n    this.slides.push(slide);\n    return slide.id;\n  }\n\n  /**\n   * Updates the slide.  Simply replaces whole slide with parameter.\n   * @param slide to be updated.\n   * @returns id of the slide updated.\n   */\n  updateSlide(slide:ISlide):number{\n    const index = this.slides.findIndex(s => s.id === slide.id);\n    this.slides[index] = slide;\n    return this.slides[index].id;\n  }\n\n  /**\n   * Delete a slide from the API.\n   * @param id of the slide to be deleted.\n   * @returns boolean if the slide id was found and deleted.\n   */\n  deleteslide(id:number):boolean{\n    const index = this.slides.findIndex(s => s.id === id);\n    if(index === undefined){\n      return false;\n    }\n    else{\n      this.slides.splice(index, 1);\n      return true;\n    }\n  }\n\n  /**\n   * Private method to mock the API.  Will be replaced for production build.\n   */\n  private loadMockslides(){\n    this.slides = [{\n      id:1,\n      imgUrl: \"https://i0.wp.com/greenandgold.uaa.alaska.edu/wp-content/uploads/2018/08/Candace-Blas-Photo-1-copy.jpg?resize=600%2C400\",\n      redirectUrl: \"http://greenandgold.uaa.alaska.edu/blog/66061/building-better-homes-investing-community/\",\n      name: \"Building better homes\",\n      altText: \"Candice Blas in church\",\n      caption: \"Candace Blas is a lifetime Anchorage resident, UAA alumna in international studies and the manager of the Church of Love — a cultural hub and neighborhood center located in the heart of the Spenard neighborhood. (Photo by James Evans / University of Alaska Anchorage)\",\n      displayOption: 'cover',\n      displayTime: 5, //in seconds\n      enabled: true,\n      order:1\n    },{\n      id:2,\n      imgUrl: \"https://i2.wp.com/greenandgold.uaa.alaska.edu/wp-content/uploads/2018/08/180807-DELLA-KEATS-LAB-JRE-0167.jpg?resize=600%2C400\",\n      redirectUrl: \"http://greenandgold.uaa.alaska.edu/blog/66020/della-keats-health-sciences-summer-program-opens-doors-teens-considering-medical-field/\",\n      name: \"Health Sciences Summer Program\",\n      altText: \"Dr. Kathryn Milligan-Myhre\",\n      caption: \"Dr. Kathryn Milligan-Myhre, right, leads a microbiology and genetics lab for high school students in the Della Keats Health Sciences Summer Program. (Photo by James Evans / University of Alaska Anchorage)\",\n      displayOption: 'cover',\n      displayTime: 5, //in seconds\n      enabled: true,\n      order:2\n    },{\n      id:3,\n      imgUrl: \"https://i1.wp.com/greenandgold.uaa.alaska.edu/wp-content/uploads/2018/08/Nicholas-Taylor-Photo-1.jpg?resize=600%2C400\",\n      redirectUrl: \"http://greenandgold.uaa.alaska.edu/blog/65969/anthropology-senior-star-sprinter-continues-break-ground/\",\n      name: \"Anthropology breaking ground.\",\n      altText: \"Nicholas Taylor\",\n      caption: \"Nicholas Taylor is a record-holding sprinter for UAA’s track and field team and a senior majoring in anthropology with an emphasis on archaeology. Earlier this summer, Taylor partook on his first archaeological dig at the historic Swan Lake, the oldest identified human establishment in North America, estimated to be around 14,200 years old. (Photo courtesy of UAA Athletics).\",\n      displayOption: 'cover',\n      displayTime: 5, //in seconds\n      enabled: true,\n      order:3\n    }];\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { IUser } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  users:IUser[];\n  constructor() {\n    this.loadMockUsers();\n   }\n\n  /**\n   * Get all the users from the API.  Including the Root.\n   * @returns an array of users.\n   */\n  getUsers():IUser[]{\n    return this.users;\n  }\n\n  /**\n   * Get a single user by id.\n   * @param id of the requested user.\n   * @returns a single instance of IUser.\n   */\n  getUser(id:number):IUser{\n    return this.users.find(u => u.id === id);\n  }\n  /**\n   * Post a user to the API.\n   * @param user to be posted to API.\n   * @returns the index of the user.\n   */\n  postUser(user:IUser):number{\n    user.id = Math.max(...this.users.map(u => u.id));\n    this.users.push(user);\n    return user.id;\n  }\n\n  /**\n   * Updates the user.  Simply replaces whole user with parameter.\n   * @param user to be updated.\n   * @returns id of the user updated.\n   */\n  updateUser(user:IUser):number{\n    const index = this.users.findIndex(u => u.id === user.id);\n    this.users[index] = user;\n    return this.users[index].id;\n  }\n\n  /**\n   * Delete a user from the API.\n   * @param id of the user to be deleted.\n   * @returns boolean if the user id was found and deleted.\n   */\n  deleteUser(id:number):boolean{\n    const index = this.users.findIndex(u => u.id === id);\n    if(index === undefined){\n      return false;\n    }\n    else{\n      this.users.splice(index, 1);\n      return true;\n    }\n  }\n\n  /**\n   * Private method to mock the API.  Will be replaced for production build.\n   */\n  private loadMockUsers(){\n    this.users = [{\n      id: 1,\n      username: 'jdoe123',\n      password: 'Zxcvb777',\n      firstname: 'John',\n      lastname: 'Doe',\n      role: 'root',\n      email: 'jdoe@alaska.edu',\n    },{\n      id: 2,\n      username: 'kmock12',\n      password: 'Asdfg777',\n      firstname: 'Kenrick',\n      lastname: 'Mock',\n      role: 'admin',\n      email: 'kmock@alaska.edu',\n    },{\n      id: 3,\n      username: 'tmount',\n      password: 'Qwert777',\n      firstname: 'Terrance',\n      lastname: 'Mount',\n      role: 'admin',\n      email: 'tmount@alaska.edu',\n    },{\n      id: 4,\n      username: 'hhelgeson',\n      password: 'Zxcvb111',\n      firstname: 'Heather',\n      lastname: 'Helgeson',\n      role: 'poweruser',\n      email: 'hhelgson@alaska.edu',\n    },{\n      id: 5,\n      username: 'troot',\n      password: 'Zxcvb222',\n      firstname: 'Tank',\n      lastname: 'Root',\n      role: 'limited',\n      email: 'troot@alaska.edu',\n    }];\n  }\n\n}\n\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nvar YAxisService = /** @class */ (function () {\n    function YAxisService() {\n        this.loadMockYAxis();\n    }\n    /**\n     * Get an array of all YAxis configs\n     */\n    YAxisService.prototype.getYAxes = function () {\n        return this.yAxes;\n    };\n    /**\n     * Get a YAxis\n     * @param id of the yAxis to be used with Chart.js\n     */\n    YAxisService.prototype.getYAxis = function (id) {\n        return this.yAxes.find(function (a) { return a.id === id; });\n    };\n    /**\n     * Post yAxis to the API. Post will overwrite the id if there is one.\n     * @param yAxis is the yAxis to be posted.\n     * @return id of the posted yAxis.\n     */\n    YAxisService.prototype.postYAxis = function (yAxis) {\n        yAxis.id = 1 + Math.max.apply(Math, this.yAxes.map(function (s) { return s.id; }));\n        this.yAxes.push(yAxis);\n        return yAxis.id;\n    };\n    /**\n     * Updates the yAxis to the API. Must have a valid ID to update in the model.\n     * @param yAxis is the yAxis to be updated.\n     * @returns id of the updated yAxis.\n     */\n    YAxisService.prototype.updateYAxis = function (yAxis) {\n        var index = this.yAxes.findIndex(function (a) { return a.id === yAxis.id; });\n        this.yAxes[index] = yAxis;\n        return yAxis.id;\n    };\n    /**\n     * Delete a yAxis from the API.\n     * @param id of the YAxis to be deleted off the API.\n     * @returns true if id was found and deleted, otherwise false.\n     */\n    YAxisService.prototype.deleteYAxis = function (id) {\n        var index = this.yAxes.findIndex(function (a) { return a.id === id; });\n        if (index === undefined) {\n            return false;\n        }\n        else {\n            this.yAxes.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * Private method to mock a api for the YAxis\n     */\n    YAxisService.prototype.loadMockYAxis = function () {\n        this.yAxes = [{\n                id: 1,\n                position: 'left',\n                labelString: 'Electrical Usage kWh'\n            }, {\n                id: 2,\n                position: 'left',\n                labelString: 'Electrical Demand kWh'\n            }, {\n                id: 3,\n                position: 'left',\n                labelString: 'Natural Gas Usage kBTUh'\n            }, {\n                id: 4,\n                position: 'left',\n                labelString: 'Natural Gas Demand kBTU'\n            }, {\n                id: 5,\n                position: 'right',\n                labelString: 'Outside Temperature &#176;F'\n            }];\n    };\n    YAxisService = __decorate([\n        Injectable({\n            providedIn: 'root'\n        })\n        /**\n         * CRUD service for handeling the yAxis config for chart.js.\n         */\n        ,\n        __metadata(\"design:paramtypes\", [])\n    ], YAxisService);\n    return YAxisService;\n}());\nexport { YAxisService };\n//# sourceMappingURL=y-axis.service.js.map","module.exports = \"<div class='container'>\\n\\n  <h3 class='mt-3'>{{slide.name}} Slide</h3>\\n  <hr/>\\n  <form #form=ngForm\\n    (ngSubmit)=\\\"saveSlide()\\\"\\n    autocomplete='off'\\n    novalidate>\\n\\n      <!-- name input box -->\\n      <div class='form-group'>\\n      <label for='slide-name'>Slide Name:</label>\\n      <input type='text'\\n        name='slide-name'\\n        class='form-control'\\n        [(ngModel)]='slide.name'\\n        id='slide-name'/>\\n      </div>\\n\\n      <!-- enabled check box -->\\n      <div class='form-group'>\\n        <input type='checkbox'\\n          class='form-check-input ml-3'\\n          [(ngModel)]='slide.enabled'\\n          name='slide-enabled'\\n          id='slide-enabled'/>\\n          <label for='slide-enabled'\\n            class='form-check-label ml-5'>Enabled</label>\\n      </div>\\n\\n      <!-- display time input box -->\\n      <div class='form-group'>\\n        <label for='display-time'>Display time(seconds):</label>\\n        <input type='text'\\n          class='form-control'\\n          [(ngModel)]='slide.displayTime'\\n          name='display-time'\\n          id='display-time'\\n          placeholder='5'/>\\n      </div>\\n\\n      <!-- css display select box -->\\n      <div class='form-group'>\\n        <label for='display-option'>CSS Display Option:</label>\\n        <select class='form-control'\\n          id='display-option'\\n          name='display-option'\\n          [(ngModel)]='slide.displayOption'>\\n\\n          <option value=''>select css image option...</option>\\n          <option value='fill'>fill</option>\\n          <option value='contain'>contain</option>\\n          <option value='cover'>cover</option>\\n          <option value='none'>none</option>\\n        </select>\\n      </div>\\n\\n        <!-- url input box -->\\n        <div class='form-group'>\\n        <label for='slide-url'>Slide URL:</label>\\n        <input type='text'\\n          class='form-control'\\n          id='slide-url'\\n          name='slide-url'\\n          (change)='checkUrlInput(slide-url.value)'\\n          [value]='slide.imgUrl'\\n          placeholder='Enter img url...'/>\\n        <em *ngIf='urlWarning'>Warning: unreference images on server will be deleted.</em>\\n      </div>\\n\\n        <!-- alt text input box -->\\n        <div class='form-group'>\\n        <label for='alt-text'>Alt text:</label>\\n        <input type='text'\\n          class='form-control'\\n          id='alt-text'\\n          name='alt-text'\\n          [(ngModel)]='slide.altText'/>\\n      </div>\\n\\n      <!-- image display box-->\\n      <div class='form-group'>\\n        <button type='button' class='btn btn-default d-block mb-2' (click)='preview()'>Preview</button>\\n        <img [src]='slide.imgUrl' [alt]='slide.altText' class='sm-img'>\\n\\n      </div>\\n\\n    <button type='submit' class='btn btn-primary'>Save</button>\\n    <button type='button' class='btn btn-default' (click)='cancel()'>Cancel</button>\\n    </form>\\n\\n  </div>\\n\\n\"","module.exports = \".sm-img {\\n  height: 100px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SlideService } from '../../services/slide.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ISlide } from '../../models/slide.model';\n\n@Component({\n  selector: 'app-slide-details',\n  templateUrl: './slide-details.component.html',\n  styleUrls: ['./slide-details.component.scss']\n})\nexport class SlideDetailsComponent implements OnInit {\n  slide:ISlide;\n\n  constructor(private _slideService:SlideService, private _route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.slide = this._slideService.getSlide(+this._route.snapshot.queryParams[\"id\"]);\n  }\n\n  saveSlide(){\n    console.log(this.slide);\n  }\n}\n","module.exports = \"\\n\\n<div class='container mt-3'>\\n  <div class='d-flex'>\\n    <!-- heading for the table -->\\n    <div>\\n      <h3>Slide Show List</h3>\\n    </div>\\n    <div class='ml-auto'>\\n      <button (click)='save()'>\\n      Save\\n      </button>\\n    </div>\\n  </div>\\n  <!-- table to show general info on all slides -->\\n  <table class='table'>\\n      <thead>\\n        <tr>\\n          <th scope='col'></th>\\n          <th scope='col'>Title</th>\\n          <th scope='col'>Diplay Time(s)</th>\\n          <th scope='col'>Thumbnail</th>\\n          <th scope='col'>Order</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor='let slide of slides; trackBy:trackSlideFn'>\\n          <!-- delete link -->\\n          <td>\\n            <a (click)='deleteSlide(slide.id)'\\n              class='alert-danger'>\\n              delete\\n            </a>\\n          </td>\\n\\n          <!-- item.name -->\\n          <td>\\n            <a [routerLink]='[\\\"/slide\\\"]'\\n              [queryParams]='{id: slide.id}'>\\n              {{slide.name}}\\n            </a>\\n          </td>\\n\\n          <!-- view and edit the time -->\\n          <td>\\n            <input type=\\\"text\\\"\\n              (change)=\\\"timeChange(slide.id, $event.target.value)\\\"\\n              [value] = 'slide.timeChange'/>\\n          </td>\\n          <td><img [src]='slide.imgUrl' [title]='slide.name' [alt]='altText' class='list-img' />\\n          </td>\\n          <td>\\n            <a (click)='moveItemUp(slide.id)'>up</a>&nbsp;/&nbsp;<a (click)='moveItemDown(slide.id)'>down</a>\\n          </td>\\n        </tr>\\n      </tbody>\\n  </table>\\n</div>\\n\"","module.exports = \"td img {\\n  height: 100px; }\\n\\ntd a {\\n  text-decoration: underline; }\\n\\ntd a:hover {\\n  cursor: pointer; }\\n\"","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { SlideService } from '../../services/slide.service';\nimport { ISlide } from '../../models/slide.model';\n\n@Component({\n  selector: 'app-slide-list',\n  templateUrl: './slide-list.component.html',\n  styleUrls: ['./slide-list.component.scss'],\n})\nexport class SlideListComponent implements OnInit {\n  slides:ISlide[];\n  isDirty: boolean = false;\n\n  constructor(private _slideService:SlideService) { }\n\n  ngOnInit() {\n    let temp = this._slideService.getSlides();\n    if(temp){\n      this.slides = temp;\n    }\n    this.slides.sort((a, b)=> {return a.order - b.order});\n  }\n\n  /**\n   * Deletes a slide from the array of slides and send a delete request to the server.\n   * @param id of the slide to delete\n   */\n  deleteSlide(id:number){\n    //check if user wants to save before deleting.\n    if(this.isDirty){\n      if(confirm(\"Do you want to save changes to slides before deleting.  Unsaved changes might be lost.\")){\n        this.save();\n      }\n    }\n    //check to make sure the user wants to delete\n    if(confirm(\"Are you sure you want to delete this slide?\")){\n\n      //attempt to delete slide\n      const result = this._slideService.deleteslide(id);\n\n      //check if API returned that it deleted slide\n      if(result){ //== true\n        //delete from array if API deleted.\n        const index = this.slides.findIndex(x => x.id === id);\n        //this.slides.splice(index, 1);\n      } else { //error occured\n        alert(\"Unable to delete slide.  Slide doen't exist or unauthorized\");\n      }\n    }\n  }\n\n  /**\n   * Moves the slide up in the slide order and resorting resorting.\n   * This uses swapItem to help get this done.\n   * @param id of the slide to move up.\n   */\n  moveItemUp(id:number):void{\n    const index = this.slides.findIndex(x => x.id === id);\n    if(index !== undefined && index > 0){\n      this.swapItems(this.slides[index - 1], this.slides[index]);\n    }\n  }\n  /**\n   * Moves the slide down in the slide order then resorting.\n   * This uses swapItem to help get this done.\n   * @param id of the slide to move down.\n   */\n  moveItemDown(id:number):void{\n    const index = this.slides.findIndex(x => x.id === id);\n    console.log(`move down id = ${id} order = ${this.slides[index].order} index = ${index} slides.length = ${this.slides.length}`)\n    if(index !== undefined && index < this.slides.length - 1){\n      this.swapItems(this.slides[index], this.slides[index + 1]);\n    }\n  }\n\n  save(){\n    let needsUpdate = this.slides.filter(x => x.isDirty);\n    console.log(`update slides with id = ${needsUpdate.map(x => x.id)}`);\n    needsUpdate.forEach(x => x.isDirty = false);\n    this.isDirty = false;\n  }\n\n  /**\n   * Swaps the two slides. Note no error checing order increments or decrements.\n   * @param plusItem is slide going down in order.\n   * @param minusItem is slide going up in order.\n   */\n  private swapItems(plusItem:ISlide, minusItem:ISlide){\n    plusItem.order++;\n    plusItem.isDirty = true;\n    minusItem.order--;\n    minusItem.isDirty = true;\n    this.slides.sort((a, b)=> {return a.order - b.order});\n    this.isDirty = true;\n  }\n\n  trackSlideFn(index, item){\n    return item.id;\n  }\n}\n","module.exports = \"<div class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div *ngFor='let slide of slides' class='col-lg-2 col-md-12 mb-4'>\\n        <div  class=\\\"view overlay z-depth-1-half\\\">\\n          <img [src]='slide.imgUrl' class='img-fluid' [alt]='slide.altText' />\\n          <a href=\\\"\\\" (click)='gotoSlide(slide.id)'>\\n            <div class=\\\"mask rgba-white-light\\\"></div>\\n          </a>\\n        </div>\\n      </div>\\n    \\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SlideService } from '../services/slide.service';\nimport { ISlide } from '../models/slide.model';\n\n@Component({\n  selector: 'app-slideshow',\n  templateUrl: './slideshow.component.html',\n  styleUrls: ['./slideshow.component.scss']\n})\nexport class SlideshowComponent implements OnInit {\n  slides:ISlide[];\n\n  constructor(private _slideService:SlideService) { }\n\n  ngOnInit() {\n    this.loadSlideShow();\n  }\n\n  loadSlideShow(){\n    this.slides = this._slideService.getSlides();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:4200/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}